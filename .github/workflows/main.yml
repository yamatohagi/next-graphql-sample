name: CI - Main

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18' # Node.js version

      - name: Create env file
        run: |
          touch .env
          echo NEXT_PUBLIC_VERCEL_ENV="production" >> .env
          echo NEXT_PUBLIC_GTM_ID=${{ secrets.NEXT_PUBLIC_GTM_ID }} >> .env
          echo POSTGRES_PRISMA_URL=${{ secrets.POSTGRES_PRISMA_URL }} >> .env
          echo SUPABASE_SERVICE_ROLE_KEY=${{ secrets.SUPABASE_SERVICE_ROLE_KEY }} >> .env
          echo NEXT_PUBLIC_SUPABASE_URL=${{ secrets.NEXT_PUBLIC_SUPABASE_URL }} >> .env
          echo NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }} >> .env

      - name: Cache node modules
        uses: actions/cache@v3
        id: npm-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/.node-version') }}-${{ hashFiles('**/package-lock.json') }}

      - name: Cache next cache
        uses: actions/cache@v3
        id: next-cache
        with:
          path: ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: Install dependencies
        run: |
          if [ "${{ steps.npm-cache.outputs.cache-hit }}" = "true" ]; then
            echo "skip npm clean-install"
          else
            npm ci
          fi

      - name: Build project
        run: npm run build

      - name: Cache production artifacts
        uses: actions/cache@v3
        with:
          path: .next
          key: ${{ runner.os }}-next-${{ github.sha }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-next-${{ github.sha }}-

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download cache
        uses: actions/cache@v3
        with:
          path: .next
          key: ${{ runner.os }}-next-${{ github.sha }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-next-${{ github.sha }}-

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/deploy.key
          chmod 600 ~/.ssh/deploy.key
          ssh-keyscan ${{ secrets.REMOTE_HOST }} >> ~/.ssh/known_hosts
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Rsync files
        run: rsync -avzr -e 'ssh -i ~/.ssh/deploy.key' --delete ./.next/ ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:${{ secrets.REMOTE_APP_DIR }}

      - name: Restart App
        run: |
          ssh -i ~/.ssh/deploy.key ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} "pm2 restart climb-bond && pm2 save"
